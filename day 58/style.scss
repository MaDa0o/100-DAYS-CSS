/* // delete the following line if no text is used */
/* // edit the line if you wanna use other fonts */
@import url(https://fonts.googleapis.com/css?family=Open+Sans:700,300);

/* // use only the available space inside the 400x400 frame */

$border: #ff6969;
$radius: 200;
$speed:6s;
$fill:#fff;

*{
  margin: 0%;
  padding: 0%;
  box-sizing: border-box;
}

.frame {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400px;
  height: 400px;
  margin-top: -200px;
  margin-left: -200px;
  border-radius: 2px;
	box-shadow: 4px 8px 16px 0 rgba(0,0,0,0.1);
	overflow: hidden;
  background: #ff6969;
  color: #333;
	font-family: 'Open Sans', Helvetica, sans-serif;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.cont{
  position: absolute;
  top: 100px;
  left: 100px;
  perspective: 450px;
}

.sphere-cont{
  width: $radius + px;
  height: $radius + px;
  transform-style: preserve-3d;
  transform: rotateX(-25deg);
  transition: all .8s ease-in-out;
  transform-origin: 50% 50%;

  &:hover{
    transform: rotateX(25deg);
  }
}

.slice{
  // width: $radius + px;
  // height: $radius + px;
  background-color: #fff;
  border-radius: 50%;
  transform: rotateX(90deg);
  border: 2px solid $border;
  position: absolute;
}

.slice-19 {
  width: $radius+px;
  height: $radius+px;
  left: 0;
  top: 0;
  transform: rotateX(90deg);
  animation: slice-21 $speed ease-in-out infinite;
}

@for $i from 1 through 9 {
  $size: $radius - (2 * ($i * $i));
  $offset: ($i * 15) - (($i * $i) / 2);
  .slice-#{$i} {
    width: $size+px;
    height: $size+px;
    left: (($radius - $size) / 2)+px;
    top: (($radius - $size) / 2)+px;
    transform: translateY(($offset)+px) rotateX(90deg);
    animation: slice-#{$i} $speed ease-in-out infinite;
  }
  
  $id: $i + 9;
  .slice-#{$id} {
    width: $size+px;
    height: $size+px;
    left: (($radius - $size) / 2)+px;
    top: (($radius - $size) / 2)+px;
    transform: translateY((-1 * $offset)+px) rotateX(90deg);
    animation: slice-#{$id} $speed ease-in-out infinite;
  }
  
  @keyframes slice-#{$i} {
    0%, 19% {
      transform: translateY(0) rotateX(90deg);
      opacity: 0;
    }
    20% {
      transform: translateY(0) rotateX(90deg);
      opacity: 1;
      border: 2px solid $fill;
    }
    30% {
      transform: translateY(($offset + ($i * 4))+px) rotateX(90deg);
      border: 2px solid $border;
    }
    35% {
      transform: translateY(($offset - ($i * 2))+px) rotateX(90deg);
    }
    40% {
      transform: translateY(($offset + ($i * 1))+px) rotateX(90deg);
    }
    45% {
      transform: translateY(($offset - ($i * .5))+px) rotateX(90deg);
    }
    50%, 65% {
      transform: translateY(($offset)+px) rotateX(90deg);
    }
    70% {
      transform: translateY(($offset + ($i * 4))+px) rotateX(90deg);
      border: 2px solid $border;
    }
    80% {
      transform: translateY(0) rotateX(90deg);
      opacity: 1;
      border: 2px solid $fill;
    } 
    81%, 100% {
      transform: translateY(0) rotateX(90deg);
      opacity: 0;
    }
  }
  
  @keyframes slice-#{$id} {
    0%, 19% {
      transform: translateY(0) rotateX(90deg);
      opacity: 0;
    }
    20% {
      transform: translateY(0) rotateX(90deg);
      opacity: 1;
      border: 2px solid $fill;
    }
    30% {
      transform: translateY((-1 * $offset - ($i * 4))+px) rotateX(90deg);
      border: 2px solid $border;
    }
    35% {
      transform: translateY((-1 * $offset + ($i * 2))+px) rotateX(90deg);
    }
    40% {
      transform: translateY((-1 * $offset - ($i * 1))+px) rotateX(90deg);
    }
    45% {
      transform: translateY((-1 * $offset + ($i * .5))+px) rotateX(90deg);
    }
    50%, 65% {
      transform: translateY((-1 * $offset)+px) rotateX(90deg);
    }
    70% {
      transform: translateY((-1 * $offset - ($i * 4))+px) rotateX(90deg);
      border: 2px solid $border;
    }
    80% {
      transform: translateY(0) rotateX(90deg);
      opacity: 1;
      border: 2px solid $fill;
    } 
    81%, 100% {
      transform: translateY(0) rotateX(90deg);
      opacity: 0;
    }
  }
  
}


